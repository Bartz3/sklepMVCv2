@using sklepMVCv2.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}

<style>
    .log {
        margin-top: 30px;
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        text-align: center;
    }

    #loginForm {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 10px;
    }

    .form-control {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        box-sizing: border-box;
        border: 1px solid #ccc;
        border-radius: 4px;
        transition: border-color 0.3s ease-in-out;
    }

        .form-control:focus {
            border-color: #3498db;
            outline: none;
        }

    label,
    input[type="submit"],
    input[type="button"] {
        width: 100%;
        text-align: center;
    }

    .margin {
        margin: 10px 0;
    }

    .btn-default {
        background-color: #3498db;
        color: white;
        padding: 12px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 10px;
    }
</style>

@*@Styles.Render("~/Content/Login.css")*@
@using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{

    <div class="log ">
        <section id="loginForm" class="padding">

            <h2>Logowanie</h2>
            @Html.AntiForgeryToken()
            <h4>Użyj lokalnego konta do zalogowania.</h4>
           
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div>
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2" })

                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })

            </div>
            <div>
                @*<div>

                        @Html.CheckBoxFor(m => m.RememberMe)
                        @Html.LabelFor(m => m.RememberMe)

                    </div>*@
                <p>
                    @*Enable this once you have account confirmation enabled for password reset functionality*@
                    @Html.ActionLink("Zapomniałeś hasła?", "ForgotPassword")
                </p>
            </div>
            <br />
            <div>
                <div>
                    <input type="submit" value="Zaloguj" class="btn btn-success" />
                </div>


            </div>
            <hr />
            <hr />
            <p>
                <input type="button" value="Zarejestruj się" onclick="location.href='@Url.Action("Register", "Account")'" class="btn btn-primary" />
                @*@Html.ActionLink("Zarejestruj się", "Register")*@
            </p>

        </section>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}